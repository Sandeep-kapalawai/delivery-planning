import { merge } from 'lodash';
import { ShipmentStatusEnum, PrimaryExecutiveStatus, SecondaryExecutiveStatus } from '@/static';
import { ICargoStuffingDetails } from '@/interfaces';

export function createMockCargoStuffingDetails(servicePlan?: Partial<ICargoStuffingDetails>): ICargoStuffingDetails {
    return merge(
        {
            deliveryPlanId: 'TEST_DELIVERY_PLAN_ID',
            cargoStuffingId: 1000,
            cargoStuffingNumber: 'TEST_CARGO_STUFFING_NUMBER',
            consigneeName: 'TEST_CONSIGNEE_NAME',
            consigneeBECode: 'TEST_CONSIGNEE_BECODE',
            sealNumber: 'TEST_SEAL_NUMBER',
            cargoStuffingType: '45HIGH',
            carrierName: 'TEST_CARRIER_NAME',
            carrierCode: 'TEST_CARRIER_CODE',
            primaryExecutiveStatus: PrimaryExecutiveStatus.IN_TRANSIT,
            secondaryExecutiveStatus: SecondaryExecutiveStatus.VESSEL_DEPARTURE,
            cargoStuffingPriority: {
                id: 100,
                level: 1,
                displayName: 'TEST_PROGRAM_DISPLAY_NAME',
                programName: 'TEST_PROGRAM_NAME',
            },
            hasDangerousGoods: false,
            hasGarmentOnHanger: false,
            isReefer: false,
            vesselVoyage: 'TEST_VESSEL / TEST_VOYAGE',
            portOfDischargeLocation: 'TEST_PORT_OF_DISCHARGE_LOCATION',
            portOfDischargeCountry: 'TEST_PORT_OF_DISCHARGE_COUNTRY',
            transportDocumentNumber: 'TEST_TRANSPORT_DOCUMENT_NUMBER',
            transportDocumentTypeCode: 'TEST_TRANSPORT_DOCUMENT_TYPE_CODE',
            latestDeliveryDateTimeUTC: '2023-01-01T00:00:00Z',
            latestDeliveryDateTimeLocal: '2023-01-01T00:00:00Z',
            predictiveEstimatedTimeOfArrivalDateTimeUTC: '2023-01-01T00:00:00Z',
            estimatedTimeOfArrivalDateTimeUTC: '2023-01-01T00:00:00Z',
            estimatedTimeOfArrivalDateTimeLocal: '2023-01-01T00:00:00Z',
            estimatedTimeOfArrivalTimeZone: 'UTC',
            terminalReadyDateTimeUTC: '2023-01-01T00:00:00Z',
            carrierReleasedDateTimeUTC: '2023-01-01T00:00:00Z',
            carrierReleasedDateTimeLocal: '2023-01-01T00:00:00Z',
            carrierReleasedTimeZone: 'UTC',
            customsClearedDateTimeUTC: '2023-01-01T00:00:00Z',
            pickupReference: 'TEST_PICKUP_REFERENCE',
            pickupReferenceExpiryDateTimeUTC: '2023-01-01T00:00:00Z',
            pickupReferenceExpiryDateTimeLocal: '2023-01-01T00:00:00Z',
            pickupReferenceExpiryTimeZone: 'UTC',
            emptyReturnReference: 'TEST_EMPTY_RETURN_REFERENCE',
            emptyReturnReferenceExpiryDateTimeUTC: '2023-01-01T00:00:00Z',
            emptyReturnReferenceExpiryDateTimeLocal: '2023-01-01T00:00:00Z',
            emptyReturnReferenceExpiryTimeZone: 'UTC',
            actualTimeOfArrivalDateTimeLocal: '2023-01-01T00:00:00Z',
            cargoStuffingGateOutDateTimeLocal: '2023-01-01T00:00:00Z',
            cargoStuffingFeeType: null,
            lastFreeDateTimeLocal: '2023-01-01T00:00:00Z',
            haveMultipleTransportDocuments: false,
            specialProgram: { id: 10, specialProgramName: 'TEST_SPECIAL_PROGRAM_NAME' },
            countLastFreeDate: '2023-01-01T00:00:00Z',
            contractStartEvent: null,
            lastFreeTimeZone: 'UTC',
            shipmentMessageSource: null,
            customerFinalPlaceOfDeliveryFacilityCode: 'TEST_CUSTOMER_FINAL_PLACE_OF_DELIVERY_FACILITY_CODE',
            customerFinalPlaceOfDeliveryFacilityDetails: 'TEST_CUSTOMER_FINAL_PLACE_OF_DELIVERY_FACILITY_DETAILS',
            shipmentStatus: ShipmentStatusEnum.APPROVED,
            estimatedTimeOfDischargeDateTimeLocal: '2023-01-01T00:00:00Z',
            estimatedTimeOfDischargeDateTimeUTC: '2023-01-01T00:00:00Z',
        } as ICargoStuffingDetails,
        servicePlan,
    );
}
